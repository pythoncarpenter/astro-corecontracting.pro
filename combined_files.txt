Files used in this run: Index.astro Header.astro tailwind.config.mjs Layout.astro

---
import ThemeToggle from "./ThemeToggle.astro";

const navItems = [
  { href: "/", text: "Home" },
  { href: "/services", text: "Services" },
  { href: "/portfolio", text: "Portfolio" },
  { href: "/about", text: "About" },
  { href: "/blog", text: "Blog" },
  { href: "/contact", text: "Contact" },
];
---

<header class="bg-white dark:bg-primary-800 shadow-md">
  <nav class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <a
        href="/"
        class="text-2xl font-display text-wood-dark dark:text-wood-light"
      >
        Core Contracting
      </a>

      <div class="hidden md:flex items-center space-x-6">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class:list={[
                "text-primary-600 dark:text-primary-300 hover:text-wood-dark dark:hover:text-wood-light transition-colors",
                {
                  "font-bold": Astro.url.pathname === item.href,
                  "hover:text-blue-700 dark:hover:text-blue-300":
                    Astro.url.pathname !== item.href,
                  "active:text-blue-800 dark:active:text-blue-200":
                    Astro.url.pathname !== item.href,
                },
              ]}
            >
              {item.text}
              {" "}
            </a>
          ))
        }
        <ThemeToggle />
      </div>

      <div class="flex items-center md:hidden">
        <button

          id="mobile-menu-button"

          class="md:hidden p-2 rounded-lg hover:bg-primary-100 dark:hover:bg-primary-700 active:bg-primary-200 dark:active:bg-primary-600"

          aria-label="Toggle menu"

        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <div
      id="mobile-menu"
      class="hidden md:hidden mt-4 space-y-4 bg-primary-50 dark:bg-primary-800 p-4 rounded-lg"
    >
      {
        navItems.map((item) => (
          <a
            href={item.href}
            class:list={[
              "block py-2 text-primary-600 dark:text-primary-300 hover:text-wood-dark dark:hover:text-wood-light transition-colors",
              {
                "font-bold": Astro.url.pathname === item.href,
                "hover:text-blue-700 dark:hover:text-blue-300":
                  Astro.url.pathname !== item.href,
                "active:text-blue-800 dark:active:text-blue-200":
                  Astro.url.pathname !== item.href,
              },
            ]}
          >
            {item.text}{" "}
          </a>
        ))
      }
    </div>
  </nav>
</header>

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    './src/**/*.{astro,html,js,jsx,svelte,ts,tsx,vue}', // Update with your file paths
  ],
  darkMode: 'class',
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#f8f9fa',
          100: '#e9ecef',
          200: '#dee2e6',
          300: '#ced4da',
          400: '#adb5bd',
          500: '#6c757d',
          600: '#495057',
          700: '#343a40',
          800: '#212529',
          900: '#121416',
        },
        wood: {
          light: '#d4a373',
          DEFAULT: '#a87c4f',
          dark: '#744924',
        },
        metal: {
          light: '#e9ecef',
          DEFAULT: '#adb5bd',
          dark: '#495057',
        },
        brown: {
          50: '#fdf8f5',
          100: '#faf2ec',
          200: '#f4e4da',
          300: '#e7c9b9',
          400: '#d9ac94',
          500: "#744923", // You can tweak these hex codes to suit your brand
          600: '#ac744f',
          700: '#8b5a3c',
          800: '#6a422b',
          900: '#4c2c1c',
        },
      },
      fontFamily: {
        sans: ['Inter', 'system-ui', 'sans-serif'],
        serif: ['Merriweather', 'Georgia', 'serif'],
        display: ['Racing Sans One', 'system-ui', 'sans-serif'],
      },
    },
  },
  plugins: [require('@tailwindcss/typography')],
};
---
import '@fontsource/inter/400.css';
import '@fontsource/inter/700.css';
import '@fontsource/merriweather/400.css';
import '@fontsource/merriweather/700.css';
import '@fontsource/racing-sans-one/400.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
  title: string;
  description?: string;
}

const {
  title,
  description = "Core Contracting - Professional Carpentry and Contracting Services in North Bay, Ontario",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
      integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <style>
      html {
        -webkit-text-size-adjust: 100%; /* Maintain compatibility */
      }

      /* Feature detection for view-transition properties */
      @supports (view-transition-name: fade) {
        html {
          /* Safely ignore experimental property */
        }
      }
    </style>
  </head>
  <body
    class="min-h-screen bg-primary-50 dark:bg-primary-900 text-primary-900 dark:text-primary-50 transition-colors duration-300"
  >
    <Header>
      <slot name="theme-toggle" slot="theme-toggle" />
    </Header>
    <main class="container mx-auto px-4 py-8">
      <slot transition:animate="slide" />
    </main>
    <Footer />
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');

        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
          });
        }
      });
    </script>
  </body>
</html>
