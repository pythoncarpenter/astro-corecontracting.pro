---
// Function to toggle the theme and save to localStorage
function toggleTheme() {
  const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
  const newTheme = currentTheme === 'light' ? 'dark' : 'light';
  document.documentElement.setAttribute('data-theme', newTheme);
  localStorage.setItem('theme', newTheme);
}

// Check the current theme on load and set it
if (typeof window !== 'undefined') {
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme) {
    document.documentElement.setAttribute('data-theme', savedTheme);
  }
}
---

<button id="theme-toggle" type="button" aria-label="Toggle Light/Dark" onclick={toggleTheme()}>
  <span class="icon">
    {
      (document.documentElement.getAttribute('data-theme') || 'light')  === 'light'
        ? '<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2a7 7 0 0 0-7 7c0 2.38 1.19 4.47 3 5.74V17a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-2.26c1.81-1.27 3-3.36 3-5.74a7 7 0 0 0-7-7M9 21a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1v-1H9v1Z"/></svg>'
        : '<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 3a6 6 0 0 0-6 6c0 2.61 1.67 4.83 4 5.65V18a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-.35c2.33-.82 4-3.04 4-5.65a6 6 0 0 0-6-6M11 1v2H8v11h3v2h4v-2h3V4h-4V2h-3Zm4.35 10.35a1 1 0 0 0-1.42-1.42L12 12.59l-2.29-2.29a1 1 0 0 0-1.42 1.42l2.29 2.29L15.35 11.35Z"/></svg>'
    }
  </span>
</button>
---
import '@fontsource/inter/400.css';
import '@fontsource/inter/700.css';
import '@fontsource/merriweather/400.css';
import '@fontsource/merriweather/700.css';
import '@fontsource/racing-sans-one/400.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ThemeToggle from '../components/ThemeToggle.astro';

interface Props {
  title: string;
  description?: string;
}

const {
  title,
  description = "Core Contracting - Professional Carpentry and Contracting Services in North Bay, Ontario",
} = Astro.props;

if (typeof window !== 'undefined') {
  try {
    const storedTheme = localStorage.getItem('colorScheme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const initialTheme = storedTheme || (prefersDark ? 'dark' : 'light');
    document.documentElement.classList.toggle('dark', initialTheme === 'dark');
    console.log(`Theme set to: ${initialTheme}`);
  } catch (error) {
    console.error('Error initializing theme:', error);
  }
}
---

<!doctype html>
<html lang="en" class:list={Astro.cookies.get('colorScheme')?.value === 'dark' ? ['dark'] : []}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
      integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <style>
      html {
        -webkit-text-size-adjust: 100%; /* Maintain compatibility */
      }

      /* Feature detection for view-transition properties */
      @supports (view-transition-name: fade) {
        html {
          /* Safely ignore experimental property */
        }
      }
</style>
    <ThemeToggle />  {/* Removed client:idle */}
  </head>
  <body
    class="min-h-screen bg-primary-50 dark:bg-primary-900 text-primary-900 dark:text-primary-50 transition-colors duration-300"
  >
    <Header />
    <main class="container mx-auto px-4 py-8">
      <slot transition:animate="slide" />
    </main>
    <Footer />
  </body>
</html>

---
const navItems = [
  { href: '/', text: 'Home' },
  { href: '/services', text: 'Services' },
  { href: '/portfolio', text: 'Portfolio' },
  { href: '/about', text: 'About' },
  { href: '/blog', text: 'Blog' },
  { href: '/contact', text: 'Contact' },
];
---

<header class="bg-white dark:bg-primary-800 shadow-md">
  <nav class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <a href="/" class="text-2xl font-display text-wood-dark dark:text-wood-light">
        Core Contracting
      </a>

      <div class="hidden md:flex items-center space-x-6">
        {navItems.map(item => (
          <a
            href={item.href}
            class:list={[
              "text-primary-600 dark:text-primary-300 hover:text-wood-dark dark:hover:text-wood-light transition-colors",
              { 
                'font-bold': Astro.url.pathname === item.href, 
                'hover:text-blue-700 dark:hover:text-blue-300': Astro.url.pathname !== item.href, 
                'active:text-blue-800 dark:active:text-blue-200': Astro.url.pathname !== item.href 
              }
            ]}
          >
            {item.text}
          </a>
        ))}
        <button
          id="scheme-toggle"
          class="p-2 rounded-full hover:bg-primary-100 dark:hover:bg-primary-700 transition-colors"
          aria-label="Toggle Light/Dark"
        >
          <svg id="sun-icon" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
          <svg id="moon-icon" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
        </button>
      </div>

      <button
        id="mobile-menu-button"
        class="md:hidden p-2 rounded-lg hover:bg-primary-100 dark:hover:bg-primary-700 active:bg-primary-200 dark:active:bg-primary-600"
        aria-label="Toggle menu"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>

    <div id="mobile-menu" class="hidden md:hidden mt-4 space-y-4 bg-primary-50 dark:bg-primary-800 p-4 rounded-lg">
      {navItems.map(item => (
        <a
          href={item.href}
          class:list={[
            "block py-2 text-primary-600 dark:text-primary-300 hover:text-wood-dark dark:hover:text-wood-light transition-colors",
            { 
              'font-bold': Astro.url.pathname === item.href, 
              'hover:text-blue-700 dark:hover:text-blue-300': Astro.url.pathname !== item.href, 
              'active:text-blue-800 dark:active:text-blue-200': Astro.url.pathname !== item.href 
            }
          ]}
        >
          {item.text}
        </a>
      ))}
    </div>
  </nav>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const schemeToggleButton = document.getElementById('scheme-toggle');

    mobileMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('hidden');
    });

    schemeToggleButton.addEventListener('click', () => {
      // Toggle the 'dark' class on the HTML element
      document.documentElement.classList.toggle('dark');

      // Update localStorage with the current theme
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('colorScheme', isDark ? 'dark' : 'light');

      // Update the Astro cookie
      Astro.cookies.set('colorScheme', isDark ? 'dark' : 'light');
    });
  });
</script>

