---
// This is now a TypeScript-enabled Astro component
---

<button id="theme-toggle" type="button" aria-label="Toggle Light/Dark">
  <span id="theme-icon"></span>
</button>

<script>
  // Function to set the theme
  function setTheme(isDark: boolean) {
    const themeIcon = document.querySelector('#theme-icon') as HTMLElement;
    if (isDark) {
      document.documentElement.classList.add('dark');
      localStorage.setItem('colorScheme', 'dark');
      themeIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 3a6 6 0 0 0-6 6c0 2.61 1.67 4.83 4 5.65V18a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-.35c2.33-.82 4-3.04 4-5.65a6 6 0 0 0-6-6M11 1v2H8v11h3v2h4v-2h3V4h-4V2h-3Zm4.35 10.35a1 1 0 0 0-1.42-1.42L12 12.59l-2.29-2.29a1 1 0 0 0-1.42 1.42l2.29 2.29L15.35 11.35Z"/></svg>`;
    } else {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('colorScheme', 'light');
      themeIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M12 2a7 7 0 0 0-7 7c0 2.38 1.19 4.47 3 5.74V17a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-2.26c1.81-1.27 3-3.36 3-5.74a7 7 0 0 0-7-7M9 21a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1v-1H9v1Z"/></svg>`;
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const themeToggle = document.getElementById('theme-toggle') as HTMLButtonElement;
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const storedTheme = localStorage.getItem('colorScheme');
    const initialTheme = storedTheme || (prefersDark ? 'dark' : 'light');

    // Initialize the theme
    setTheme(initialTheme === 'dark');

    // Toggle theme on button click
    themeToggle.addEventListener('click', () => {
      const isDark = document.documentElement.classList.contains('dark');
      setTheme(!isDark);
    });
  });
</script>