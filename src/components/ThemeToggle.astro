---
// (No frontmatter is required in this case)
---

<button id="theme-toggle" type="button" aria-label="Toggle Light/Dark">
  <span id="theme-icon" class="flex items-center justify-center"></span>
</button>

<script>
  // Function to update the theme toggle icon
  function updateThemeIcon(isDark) {
    const themeIcon = document.getElementById('theme-icon');
    if (isDark) {
      themeIcon.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"
             stroke="currentColor" stroke-width="2" stroke-linecap="round"
             stroke-linejoin="round" class="w-6 h-6 text-yellow-300">
          <circle cx="12" cy="12" r="5" />
          <path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" />
        </svg>
      `;
    } else {
      themeIcon.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"
             stroke="currentColor" stroke-width="2" stroke-linecap="round"
             stroke-linejoin="round" class="w-6 h-6 text-blue-700">
          <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" />
        </svg>
      `;
    }
  }

  // Initialize the icon based on the current theme.
  // The initial theme is already set by an inline script in your layout's <head>
  updateThemeIcon(document.documentElement.classList.contains('dark'));

  // Attach click event to toggle the theme and update localStorage
  document.getElementById('theme-toggle').addEventListener('click', () => {
    const isDark = document.documentElement.classList.contains('dark');
    if (isDark) {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('colorScheme', 'light');
    } else {
      document.documentElement.classList.add('dark');
      localStorage.setItem('colorScheme', 'dark');
    }
    updateThemeIcon(!isDark);
  });
</script>